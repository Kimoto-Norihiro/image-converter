// Code generated by MockGen. DO NOT EDIT.
// Source: image_usecase.go

// Package imagemodulemock is a generated GoMock package.
package imagemodulemock

import (
	context "context"
	reflect "reflect"

	imagemodel "github.com/Kimoto-Norihiro/image-converter/module/imagemodule/model/imagemodel"
	gomock "github.com/golang/mock/gomock"
)

// MockImageUsecase is a mock of ImageUsecase interface.
type MockImageUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockImageUsecaseMockRecorder
}

// MockImageUsecaseMockRecorder is the mock recorder for MockImageUsecase.
type MockImageUsecaseMockRecorder struct {
	mock *MockImageUsecase
}

// NewMockImageUsecase creates a new mock instance.
func NewMockImageUsecase(ctrl *gomock.Controller) *MockImageUsecase {
	mock := &MockImageUsecase{ctrl: ctrl}
	mock.recorder = &MockImageUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageUsecase) EXPECT() *MockImageUsecaseMockRecorder {
	return m.recorder
}

// CreateImage mocks base method.
func (m *MockImageUsecase) CreateImage(ctx context.Context, objectName string, resizeWidthPercent, resizeHeightPercent int, encodeFormat imagemodel.EncodeFormat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateImage", ctx, objectName, resizeWidthPercent, resizeHeightPercent, encodeFormat)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateImage indicates an expected call of CreateImage.
func (mr *MockImageUsecaseMockRecorder) CreateImage(ctx, objectName, resizeWidthPercent, resizeHeightPercent, encodeFormat interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateImage", reflect.TypeOf((*MockImageUsecase)(nil).CreateImage), ctx, objectName, resizeWidthPercent, resizeHeightPercent, encodeFormat)
}

// ListImages mocks base method.
func (m *MockImageUsecase) ListImages(ctx context.Context) ([]imagemodel.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListImages", ctx)
	ret0, _ := ret[0].([]imagemodel.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListImages indicates an expected call of ListImages.
func (mr *MockImageUsecaseMockRecorder) ListImages(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListImages", reflect.TypeOf((*MockImageUsecase)(nil).ListImages), ctx)
}

// UpdateImage mocks base method.
func (m *MockImageUsecase) UpdateImage(ctx context.Context, id int64, statusID *imagemodel.ImageStatus, convertedImageURL *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateImage", ctx, id, statusID, convertedImageURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateImage indicates an expected call of UpdateImage.
func (mr *MockImageUsecaseMockRecorder) UpdateImage(ctx, id, statusID, convertedImageURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateImage", reflect.TypeOf((*MockImageUsecase)(nil).UpdateImage), ctx, id, statusID, convertedImageURL)
}
